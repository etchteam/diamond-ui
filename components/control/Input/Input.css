diamond-input {
  --_background: var(--diamond-input-background);
  --_border-color: var(--diamond-input-border-color);

  background: var(--_background);
  border: 1px solid var(--_border-color);
  border-radius: var(--diamond-input-border-radius);
  color: var(--diamond-input-color);
  display: flex;
  overflow: hidden;
  position: relative;
  transition:
    border-color var(--diamond-transition),
    background-color var(--diamond-transition);

  &:hover,
  &:focus-within {
    --_border-color: var(--diamond-input-border-color-hover);
  }

  &:focus-within {
    --_background: var(--diamond-input-background-focus);
  }

  &[state='valid'] {
    --_border-color: var(--diamond-input-border-color-valid);
  }

  &[state='invalid'] {
    --_border-color: var(--diamond-input-border-color-invalid);
  }

  &:has([disabled]) {
    --_background: var(--diamond-input-background-disabled);
    cursor: not-allowed;
    opacity: 0.5;
    pointer-events: none;
  }

  input {
    appearance: none;
    background: none;
    border: 0 none;
    color: inherit;
    display: block;
    line-height: var(--diamond-input-line-height);
    min-height: var(--diamond-spacing-thumb);
    padding: var(--diamond-input-padding);
    width: 100%;

    &:focus {
      outline: none;
    }
  }

  svg {
    block-size: var(--diamond-input-icon-size);
    flex-shrink: 0;
    inline-size: var(--diamond-input-icon-size);
  }

  /* Prefix */
  &:has(* + input) :first-child {
    margin-right: calc(var(--diamond-input-padding-horizontal) / 2 * -1);
    padding: 0 0 0 var(--diamond-input-padding-horizontal);
  }

  /* Suffix */
  input + * {
    margin-left: calc(var(--diamond-input-padding-horizontal) / 2 * -1);
    padding: 0 var(--diamond-input-padding-horizontal) 0 0;
  }
}
